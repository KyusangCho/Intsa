@page "/Boards/Notices/Create"

@using Microsoft.AspNetCore.Identity
@using BlazorDemos.Shared
@using Syncfusion.Blazor.RichTextEditor
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<IdentityUser> SignInManager

@inherits SampleBaseComponent;

<h3>Create</h3>

<div class="row">
    <div class="col-md-12">
        <EditForm Model="model" OnValidSubmit="FormSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="form-group">
                <label for="txtName">Name</label>
                <InputText id="txtName" class="form-control" placeholder="Enter Name"
                           @bind-Value="@model.Name"></InputText>
                <ValidationMessage For="@(()=>model.Name)" class="form-text text-muted"></ValidationMessage>
            </div>
            <div class="form-group">
                <label for="txtTitle">Title</label>
                <InputText id="txtTitle" class="form-control" placeholder="Enter Title"
                           @bind-Value="@model.Title"></InputText>
                <ValidationMessage For="@(()=>model.Title)" class="form-text text-muted"></ValidationMessage>
            </div>
            <div class="form-group">
                <label for="txtContent">Content</label>
                <div class="control-section">
                    <div class="control-wrapper">
                        <div class="control-section">
                            <SfRichTextEditor ShowCharCount="true" Height="500" @bind-Value="@model.Content">
                                <RichTextEditorToolbarSettings Items="Tools" Type="ToolbarType.Expand" />
                            </SfRichTextEditor>
                        </div>
                    </div>
                </div>

                @*<InputTextArea id="txtContent" class="form-control" placeholder="Enter Content" rows="5"
            @bind-Value="@model.Content"></InputTextArea>*@
                <ValidationMessage For="@(()=>model.Content)" class="form-text text-muted"></ValidationMessage>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="row mb-n3">
                        <div class="col-xl-6">
                            <div class="fs-12px text-muted mb-1"><b>메일발송</b></div>
                            <div class="form-group mb-4">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" value="" name="radio_1" id="defaultRadio1" checked="">
                                    <label class="form-check-label" for="defaultRadio1">INT 전체</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" value="" name="radio_1" id="defaultRadio2">
                                    <label class="form-check-label" for="defaultRadio2">사무실</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" value="" name="radio_1" id="defaultRadio3">
                                    <label class="form-check-label" for="defaultRadio3">공장</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-6">
                            <div class="fs-12px text-muted mb-1"><b>공지분류</b></div>
                            <div class="form-group mb-3">
                                <InputSelect @bind-Value="@ParentId" class="form-select" id="lstCategory">
                                    <option value="">--Select Type--</option>
                                    @foreach (var p in parentIds)
                                    {
                                        if (p.Equals(1))
                                        {
                                            <option value="@p" selected>일반</option>
                                        }
                                        if (p.Equals(2))
                                        {
                                            <option value="@p">중요</option>
                                        }
                                        if (p.Equals(3))
                                        {
                                            <option value="@p">급여</option>
                                        }

                                    }
                                </InputSelect>
                                <ValidationMessage For="@(()=> ParentId)" class="form-text text-muted"></ValidationMessage>
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
            
            @*<div class="form-group">
            <label for="lstCategory">Attach files</label>
            <SfUploader ID="UploadFiles" AutoUpload="true" AllowedExtensions=".doc, docx, .xls, xlsx, .pdf" Multiple="false" MaxFileSize=5000000>
                <UploaderAsyncSettings SaveUrl="api/FileUpload/Save" RemoveUrl="api/FileUpload/Remove"></UploaderAsyncSettings>
            </SfUploader>
        </div>*@
            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Submit</button>
                <a href="/Boards/Notices" class="btn btn-secondary">List</a>
            </div>
        </EditForm>
            </div>
        </div>
        <style>
            .e-code-mirror::before {
                content: '\e345';
            }

            .e-html-preview::before {
                content: '\e350';
            }

            .CodeMirror-linenumber,
            .CodeMirror-gutters {
                display: none;
            }

            .sb-header {
                z-index: 100;
            }
        </style>