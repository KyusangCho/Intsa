@page "/Sales/Analysis/MonthlyStatus"
@page "/Sales/Analysis/MonthlyStatus/Index"

@using Syncfusion.Blazor.Grids
@using System.ComponentModel.DataAnnotations
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns

<h1 class="page-header mb-3">
    Monthly Report
    <small>월간 업무 보고서 (영업부)</small>
</h1>

@{
    var Initial = (new string[] { "Team" });
}

<div class="card">
    <div class="card-header d-flex">
        <span class="flex-grow-1">
            <div class="row">
                <div class="col-5">
                    <SfDropDownList TValue="string" TItem="string" Placeholder="Select a period"></SfDropDownList>
                </div>
            </div>
        </span>
        <a href="#" data-toggle="card-expand" class="text-muted text-decoration-none"><i class="fa fa-fw fa-expand"></i> Expand</a>
    </div>
    <div class="card-body">
        <div class="accordion" id="accordionWeekly">
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading1">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse1">
                        월간 출고 완료 및 계획
                    </button>
                </h2>
                <div id="collapse1" class="accordion-collapse collapse show" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">

                        <div class="control-section">

                            <div class="row">
                                <div class="col-6">
                                    <SfAccumulationChart EnableBorderOnMouseMove="false" Title="월간 출고 완료 금액" EnableSmartLabels="true">
                                        <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
                                        <AccumulationChartTooltipSettings Enable="true" Format="${point.x} : <b>${point.y}%</b>"></AccumulationChartTooltipSettings>
                                        <AccumulationChartSeriesCollection>
                                            <AccumulationChartSeries DataSource="@WeeklyShippedAmt" Name="MonthlyShipped" XName="Buyer" YName="Amount" StartAngle="60" InnerRadius="0%">
                                                <AccumulationDataLabelSettings Name="DataLabelMappingName" Visible="true" Position="AccumulationLabelPosition.Inside">
                                                    <AccumulationChartConnector Length="20px" Type="ConnectorType.Curve"></AccumulationChartConnector>
                                                </AccumulationDataLabelSettings>
                                            </AccumulationChartSeries>
                                        </AccumulationChartSeriesCollection>
                                    </SfAccumulationChart>
                                </div>
                                <div class="col-6">
                                    <SfAccumulationChart EnableBorderOnMouseMove="false" Title="월간 출고 계획 금액" EnableSmartLabels="true">
                                        <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
                                        <AccumulationChartTooltipSettings Enable="true" Format="${point.x} : <b>${point.y}%</b>"></AccumulationChartTooltipSettings>
                                        <AccumulationChartSeriesCollection>
                                            <AccumulationChartSeries DataSource="@WeeklyShippedAmt" Name="MonthlyShipped" XName="Buyer" YName="Amount" StartAngle="60" InnerRadius="0%">
                                                <AccumulationDataLabelSettings Name="DataLabelMappingName" Visible="true" Position="AccumulationLabelPosition.Inside">
                                                    <AccumulationChartConnector Length="20px" Type="ConnectorType.Curve"></AccumulationChartConnector>
                                                </AccumulationDataLabelSettings>
                                            </AccumulationChartSeries>
                                        </AccumulationChartSeriesCollection>
                                    </SfAccumulationChart>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <SfChart Title="MONTHLY SHIP AMOUNT">
                                        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
                                        <ChartLegendSettings Visible="false"></ChartLegendSettings>
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
                                            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                                        </ChartPrimaryXAxis>
                                        <ChartPrimaryYAxis LabelFormat="{value}$" RangePadding="ChartRangePadding.None" Minimum="0" Maximum="15000000" Interval="5000000">
                                            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                                            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                        </ChartPrimaryYAxis>
                                        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@ChartData" Name="ShipAmount" XName="Weekno" Width="2" Fill="#1e90ff"
                                                         Opacity="1" YName="OrderAmount" Type="ChartSeriesType.Column" PointColorMapping="Color">
                                                <ChartMarker Visible="true" Width="5" Height="5" Fill="#1e90ff">
                                                </ChartMarker>
                                            </ChartSeries>
                                            <ChartSeries DataSource="@ChartData" Name="ShipAmount" XName="Weekno" Width="2" Fill="#84CF45"
                                                         Opacity="1" YName="ShipAmount" Type="ChartSeriesType.Column" PointColorMapping="Color">
                                                <ChartMarker Visible="true" Width="5" Height="5" Fill="#84CF45">
                                                </ChartMarker>
                                            </ChartSeries>

                                        </ChartSeriesCollection>
                                    </SfChart>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading2">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse2">
                        1. 새 오더 수주 내역 (Status of new order received)
                    </button>
                </h2>
                <div id="collapse2" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid" @ref="DefaultGrid" DataSource="@OrderStatuses"
                                AllowPaging="false" AllowSorting="true" Height="100%" Width="100%"
                                AllowExcelExport="true" AllowPdfExport="true"
                                AllowGrouping="true">
                            <GridGroupSettings ShowDropArea="false" Columns="@Initial" ShowGroupedColumn="true" ShowToggleButton="false">
                                <CaptionTemplate>
                                    @{
                                        @*var order = (context as CaptionTemplateContext);*@
                                        <div></div>
                                    }
                                </CaptionTemplate>
                            </GridGroupSettings>
                            <GridAggregates>
                                <GridAggregate>
                                    <GridAggregateColumns>
                                        <GridAggregateColumn Field=@nameof(OrderStatus.Balqty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(OrderStatus.Uprice) Type="AggregateType.Average" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Average</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Average</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>

                                        <GridAggregateColumn Field=@nameof(OrderStatus.OrderBalAmt) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>

                                        <GridAggregateColumn Field=@nameof(OrderStatus.TotalAmount) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                    </GridAggregateColumns>
                                </GridAggregate>
                            </GridAggregates>
                            <GridColumns>
                                <GridColumn Field=@nameof(OrderStatus.ID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false">
                                </GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true">
                                </GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Teamleader) TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Buyer) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true">
                                </GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Delivery) Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130" AutoFit="true"></GridColumn>

                                <GridColumn Field=@nameof(OrderStatus.Styleno) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Pono) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Balqty) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Uprice) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.OrderBalAmt) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.TotalAmount) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.GoalAmount) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.GoalRates) Format="P1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(OrderStatus.Remark) TextAlign="TextAlign.Left" AutoFit="true"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>

            <div class="accordion-item">
                <h2 class="accordion-header" id="heading11">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse11">
                        1-1. 누적 오더 수주 비교
                    </button>
                </h2>
                <div id="collapse11" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        
                    </div>
                </div>
            </div>

            <div class="accordion-item">
                <h2 class="accordion-header" id="heading3">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse3">
                        2. 지난 달 출고 현황 (Last month's shipment status)
                    </button>
                </h2>
                <div id="collapse3" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid2" @ref="DefaultGrid2" DataSource="@LastShipments"
                                AllowPaging="false" AllowSorting="true" Height="100%" Width="100%"
                                AllowExcelExport="true" AllowPdfExport="true"
                                AllowGrouping="true">
                            <GridGroupSettings ShowDropArea="false" Columns="@Initial" ShowGroupedColumn="true" ShowToggleButton="false">
                                <CaptionTemplate>
                                    @{
                                        @*var order = (context as CaptionTemplateContext);*@
                                        <div></div>
                                    }
                                </CaptionTemplate>
                            </GridGroupSettings>
                            <GridAggregates>
                                <GridAggregate>
                                    <GridAggregateColumns>
                                        <GridAggregateColumn Field=@nameof(LastShipment.PlannedQty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(LastShipment.PlannedAmt) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(LastShipment.ShippedQty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(LastShipment.ShippedAmt) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(LastShipment.BalanceQty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(LastShipment.BalanceAmt) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>

                                    </GridAggregateColumns>
                                </GridAggregate>
                            </GridAggregates>
                            <GridColumns>
                                <GridColumn Field=@nameof(LastShipment.ID) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.Teamleader) TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.Buyer) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.Delivery) Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" Width="130" AutoFit="true"></GridColumn>

                                <GridColumn Field=@nameof(LastShipment.Fileno) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.Pono) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.PlannedQty) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.PlannedAmt) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.ShippedQty) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.ShippedAmt) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.BalanceQty) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(LastShipment.BalanceAmt) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>

                                <GridColumn Field=@nameof(LastShipment.Remark) TextAlign="TextAlign.Left" AutoFit="true"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
            
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading4">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse5">
                        3. 금월 출고 계획 (This month's shipment plan)
                    </button>
                </h2>
                <div id="collapse5" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid4" @ref="DefaultGrid4" DataSource="@CurrentShipments"
                                AllowPaging="false" AllowSorting="true" Height="100%" Width="100%"
                                AllowExcelExport="true" AllowPdfExport="true"
                                AllowGrouping="true">
                            <GridGroupSettings ShowDropArea="false" Columns="@Initial" ShowGroupedColumn="true" ShowToggleButton="false">
                                <CaptionTemplate>
                                    @{
                                        @*var order = (context as CaptionTemplateContext);*@
                                        <div></div>
                                    }
                                </CaptionTemplate>
                            </GridGroupSettings>
                            <GridAggregates>
                                <GridAggregate>
                                    <GridAggregateColumns>
                                        <GridAggregateColumn Field=@nameof(CurrentShipment.PlannedQty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(CurrentShipment.PlannedAmt) Type="AggregateType.Sum" Format="C2">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>


                                    </GridAggregateColumns>
                                </GridAggregate>
                            </GridAggregates>
                            <GridColumns>
                                <GridColumn Field=@nameof(CurrentShipment.ID) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Teamleader) TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Buyer) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Delivery) Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" Width="130" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Fileno) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Pono) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.PlannedQty) Format="N" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.PlannedAmt) Format="C2" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" Width="110" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Factory) TextAlign="TextAlign.Left" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(CurrentShipment.Remark) TextAlign="TextAlign.Left"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading4">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse6">
                        4. 금월 봉제 라인 계획 (This Month's sewing production plan)
                    </button>
                </h2>
                <div id="collapse6" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid5" @ref="DefaultGrid5" DataSource="@Sewings"
                                AllowPaging="false" AllowSorting="true" Height="100%" Width="100%"
                                AllowExcelExport="true" AllowPdfExport="true"
                                AllowGrouping="true">
                            <GridGroupSettings ShowDropArea="false" Columns="@Initial" ShowGroupedColumn="true" ShowToggleButton="false">
                                <CaptionTemplate>
                                    @{
                                        @*var order = (context as CaptionTemplateContext);*@
                                        <div></div>
                                    }
                                </CaptionTemplate>
                            </GridGroupSettings>
                            <GridAggregates>
                                <GridAggregate>
                                    <GridAggregateColumns>
                                        <GridAggregateColumn Field=@nameof(Sewing.OrderQty) Type="AggregateType.Sum" Format="N">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew1) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew2) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew3) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew4) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew5) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew6) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Sew7) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>
                                        <GridAggregateColumn Field=@nameof(Sewing.Total) Type="AggregateType.Sum" Format="N1">
                                            <GroupFooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                            <FooterTemplate>
                                                @{
                                                    var aggregate = (context as AggregateTemplateContext);
                                                    <div>
                                                        <p>@aggregate.Sum</p>
                                                    </div>
                                                }
                                            </FooterTemplate>
                                        </GridAggregateColumn>


                                    </GridAggregateColumns>
                                </GridAggregate>
                            </GridAggregates>
                            <GridColumns>
                                <GridColumn Field=@nameof(Sewing.ID) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Teamleader) TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Buyer) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Delivery) Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" Width="130" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.OrderQty) Format="N0" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew1) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew2) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew3) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew4) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew5) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew6) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Sew7) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Total) Format="N1" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Right" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(Sewing.Remark) TextAlign="TextAlign.Left"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
            
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading4">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse8">
                        5. 바이어 추이 및 주요 동향 (Customer's transition & current trends)
                    </button>
                </h2>
                <div id="collapse8" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid6" @ref="DefaultGrid6" DataSource="@CustomerTrends" AllowPaging="false" AllowSorting="true" Height="100%" Width="100%">
                            <GridColumns>
                                <GridColumn Field=@nameof(CustomerTrend.ID) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false"></GridColumn>
                                <GridColumn Field=@nameof(CustomerTrend.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true">
                                </GridColumn>
                                <GridColumn Field=@nameof(CustomerTrend.Buyer) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true">
                                </GridColumn>
                                <GridColumn Field=@nameof(CustomerTrend.Teamleader) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true">
                                </GridColumn>
                                <GridColumn Field=@nameof(CustomerTrend.Notice) TextAlign="TextAlign.Left" Width="800" ></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading9">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse9">
                        6. 공지 사항 (바이어 동향, 신규 생산 업체 개발건, 협력 업체 동향 주시건등 업무에 관하여 공유해야 하는 모든 사항)
                    </button>
                </h2>
                <div id="collapse9" class="accordion-collapse collapse" data-bs-parent="#accordionWeekly">
                    <div class="accordion-body">
                        <SfGrid ID="Grid8" @ref="DefaultGrid8" DataSource="@TeamNotices" AllowPaging="false" AllowSorting="true" Height="100%" Width="100%">
                            <GridColumns>
                                <GridColumn Field=@nameof(TeamNotice.ID) HeaderText="ID" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120" Visible="false"></GridColumn>
                                <GridColumn Field=@nameof(TeamNotice.Team) HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Left" Width="120" AutoFit="true"></GridColumn>
                                <GridColumn Field=@nameof(TeamNotice.Subject) TextAlign="TextAlign.Left" Width="800"></GridColumn>
                                <GridColumn Field=@nameof(TeamNotice.Contact) TextAlign="TextAlign.Left" Width="120"></GridColumn>
                                <GridColumn Field=@nameof(TeamNotice.Remark) TextAlign="TextAlign.Left" Width="300"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .e-click::before {
        content: '\e525';
    }

    .e-excel::before {
        content: '\e242';
    }

    .e-pdf::before {
        content: '\e240';
    }
</style>

@code {

    public DateTime? DateValue { get; set; } = DateTime.Now;
    public string val = "";

    private SfGrid<OrderStatus> DefaultGrid;
    private SfGrid<LastShipment> DefaultGrid2;
    private SfGrid<CurrentShipment> DefaultGrid4;
    private SfGrid<Sewing> DefaultGrid5;
    private SfGrid<CustomerTrend> DefaultGrid6;
    private SfGrid<TeamNotice> DefaultGrid8;

    public List<OrderStatus> OrderStatuses { get; set; }
    public List<LastShipment> LastShipments { get; set; }
    public List<CurrentShipment> CurrentShipments { get; set; }
    public List<Sewing> Sewings { get; set; }
    public List<CustomerTrend> CustomerTrends { get; set; }
    public List<TeamNotice> TeamNotices { get; set; }

    protected override void OnInitialized()
    {
        OrderStatuses = Enumerable.Range(1, 45).Select(x => new OrderStatus()
        {
            ID = 1000 + x,
            Team = (new string[] { "Administration", "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(7)],
            Buyer = (new string[] { "BELUGA INC", "EXPRESS", "JCREW", "MATERNITY OPCO", "KOHL'S", "TORRID", "MAURICES", "LUCKY OPCO" })[new Random().Next(8)],

            Styleno = new Random().Next(600000),
            Pono = new Random().Next(600000),
            Balqty = new Random().Next(600000),
            Uprice = Convert.ToDecimal(new Random().NextDouble() * 10.0f),
            OrderBalAmt = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),
            TotalAmount = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),
            GoalAmount = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),
            GoalRates = Convert.ToDecimal(new Random().NextDouble() ),
            Created = DateTime.Now.AddDays(-x),
            Delivery = DateTime.Now.AddDays(-x),
        }).ToList();

        LastShipments = Enumerable.Range(1, 45).Select(x => new LastShipment()
        {
            ID = 1000 + x,
            Team = (new string[] { "Administration", "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(7)],
            Buyer = (new string[] { "BELUGA INC", "EXPRESS", "JCREW", "MATERNITY OPCO", "KOHL'S", "TORRID", "MAURICES", "LUCKY OPCO" })[new Random().Next(8)],

            Fileno = new Random().Next(60),
            Pono = new Random().Next(600),
            PlannedQty = new Random().Next(600000),
            PlannedAmt = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),
            ShippedQty = new Random().Next(600000),
            ShippedAmt = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),
            BalanceQty = new Random().Next(600000),
            BalanceAmt = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),

            Created = DateTime.Now.AddDays(-x),
            Delivery = DateTime.Now.AddDays(-x),
        }).ToList();

        CurrentShipments = Enumerable.Range(1, 45).Select(x => new CurrentShipment()
        {
            ID = 1000 + x,
            Team = (new string[] { "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(6)],
            Buyer = (new string[] { "BELUGA INC", "EXPRESS", "JCREW", "MATERNITY OPCO", "KOHL'S", "TORRID", "MAURICES", "LUCKY OPCO" })[new Random().Next(8)],

            Fileno = new Random().Next(60),
            Pono = new Random().Next(600),
            PlannedQty = new Random().Next(600000),
            PlannedAmt = Convert.ToDecimal(new Random().NextDouble() * 10000.0f),

            Created = DateTime.Now.AddDays(-x),
            Delivery = DateTime.Now.AddDays(-x),
        }).ToList();

        Sewings = Enumerable.Range(1, 45).Select(x => new Sewing()
        {
            ID = 1000 + x,
            Team = (new string[] { "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(6)],
            Buyer = (new string[] { "BELUGA INC", "EXPRESS", "JCREW", "MATERNITY OPCO", "KOHL'S", "TORRID", "MAURICES", "LUCKY OPCO" })[new Random().Next(8)],

            OrderQty = new Random().Next(600000),
            Sew1 = Convert.ToDecimal(new Random().Next(10)),
            Sew2 = Convert.ToDecimal(new Random().Next(10)),
            Sew3 = Convert.ToDecimal(new Random().Next(10)),
            Sew4 = Convert.ToDecimal(new Random().Next(10)),
            Sew5 = Convert.ToDecimal(new Random().Next(10)),
            Sew6 = Convert.ToDecimal(new Random().Next(10)),
            Sew7 = Convert.ToDecimal(new Random().Next(10)),
            Total = Convert.ToDecimal(new Random().Next(10)),

            Created = DateTime.Now.AddDays(-x),
            Delivery = DateTime.Now.AddDays(-x),
        }).ToList();

        CustomerTrends = Enumerable.Range(1, 5).Select(x => new CustomerTrend()
        {
            ID = 1000 + x,
            Team = (new string[] { "Administration", "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(7)],
            Buyer = (new string[] { "BELUGA INC", "EXPRESS", "JCREW", "MATERNITY OPCO", "KOHL'S", "TORRID", "MAURICES", "LUCKY OPCO" })[new Random().Next(8)],

        }).ToList();

        TeamNotices = Enumerable.Range(1, 1).Select(x => new TeamNotice()
        {
            ID = 1000 + x,
            Team = (new string[] { "Administration", "Team1A", "Team1C", "Team2A", "Team2B", "Team3A", "Team3B", })[new Random().Next(7)],
        }).ToList();
    }

    public List<PieData> WeeklyShippedAmt { get; set; } = new List<PieData>
{
        new PieData { Buyer = "American Eagle Outfitters", Amount = 46, DataLabelMappingName = "American Eagle Outfitters: 46" },
        new PieData { Buyer = "Express", Amount = 26, DataLabelMappingName = "Express: 26" },
        new PieData { Buyer = "LIG", Amount = 19, DataLabelMappingName = "LIG: 19" },
        new PieData { Buyer = "Lucky Opco", Amount = 17, DataLabelMappingName = "Lucky Opco: 17" },
        new PieData { Buyer = "Jcrew", Amount = 12, DataLabelMappingName = "Jcrew: 12"  },
        new PieData { Buyer = "Belk", Amount = 10, DataLabelMappingName = "Belk: 10" },
        new PieData { Buyer = "Kontoor", Amount = 9, DataLabelMappingName = "Kontoor: 9" },
        new PieData { Buyer = "Maternity Opco", Amount = 27, DataLabelMappingName = "Maternity Opco: 27" },
        new PieData { Buyer = "Abercrombie & Fitch", Amount = 8, DataLabelMappingName = "Abercrombie & Fitch: 8" },
        new PieData { Buyer = "Kohl's", Amount = 8, DataLabelMappingName = "Kohl's: 8" },
        new PieData { Buyer = "Urban Outfitters", Amount = 8, DataLabelMappingName = "Urban Outfitters: 8" },
        new PieData { Buyer = "Guess", Amount = 4, DataLabelMappingName = "Guess: 4" },
        new PieData { Buyer = "Lane Bryant", Amount = 4, DataLabelMappingName = "Lane Bryant: 4" },
        new PieData { Buyer = "Maurices", Amount = 3, DataLabelMappingName = "Maurices: 3" },
        new PieData { Buyer = "Torrid", Amount = 3, DataLabelMappingName = "Torrid: 3" },
        new PieData { Buyer = "Land's End", Amount = 3, DataLabelMappingName = "Land's End: 3" },
    };

    public class PieData
    {
        public string Buyer { get; set; }
        public double Amount { get; set; }
        public string DataLabelMappingName { get; set; }
    }

    public List<LineChartData> ChartData = Enumerable.Range(1, 12).Select(x => new LineChartData()
    {
        Weekno = x,
        OrderAmount = x < 10 ? new Random().Next(13000000) : 0,
        ShipAmount = x < 7 ? new Random().Next(13000000) : 0,
        @*Color = "#1e90ff",*@
    }).ToList();

    public class LineChartData
    {
        public int Weekno { get; set; }
        public double OrderAmount { get; set; }
        public double ShipAmount { get; set; }
        @*public string Color { get; set; }*@
    }

    public class OrderStatus
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "TeamManager")]
        public string Teamleader { get; set; }
        [Display(Name = "Buyer")]
        public string Buyer { get; set; }
        [DataType(DataType.Date)]
        [Display(Name = "Delivery")]
        public DateTime Delivery { get; set; }

        [Display(Name = "No. of Style")]
        public int Styleno { get; set; }
        [Display(Name = "No. of PO")]
        public int Pono { get; set; }
        [Display(Name = "Order Bal Q'ty")]
        public int Balqty { get; set; }
        [Display(Name = "U/Price")]
        public decimal Uprice { get; set; }
        [Display(Name = "Order Bal in $")]
        public decimal OrderBalAmt { get; set; }
        [Display(Name = "TTL O/Amount rcvd")]
        public decimal TotalAmount { get; set; }
        [Display(Name = "Goal Amount")]
        public decimal GoalAmount { get; set; }
        [Display(Name = "% of Accumulated vs Goal Amount")]
        public decimal GoalRates { get; set; }

        [Display(Name = "Remark")]
        public string Remark { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }

    public class LastShipment
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "TeamManager")]
        public string Teamleader { get; set; }
        [Display(Name = "Buyer")]
        public string Buyer { get; set; }
        [DataType(DataType.Date)]
        [Display(Name = "Delivery")]
        public DateTime Delivery { get; set; }

        [Display(Name = "No. of File")]
        public int Fileno { get; set; }
        [Display(Name = "No. of PO")]
        public int Pono { get; set; }
        [Display(Name = "Planned Q'ty")]
        public int PlannedQty { get; set; }
        [Display(Name = "Planned($)")]
        public decimal PlannedAmt { get; set; }
        [Display(Name = "Shipped Q'ty")]
        public int ShippedQty { get; set; }
        [Display(Name = "Shipped($)")]
        public decimal ShippedAmt { get; set; }
        [Display(Name = "Balance Q'ty")]
        public int BalanceQty { get; set; }
        [Display(Name = "Balance($)")]
        public decimal BalanceAmt { get; set; }

        [Display(Name = "Remark")]
        public string Remark { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }

    public class CurrentShipment
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "TeamManager")]
        public string Teamleader { get; set; }
        [Display(Name = "Buyer")]
        public string Buyer { get; set; }
        [DataType(DataType.Date)]
        [Display(Name = "Delivery")]
        public DateTime Delivery { get; set; }

        [Display(Name = "No. of File")]
        public int Fileno { get; set; }
        [Display(Name = "No. of PO")]
        public int Pono { get; set; }
        [Display(Name = "Planned Q'ty")]
        public int PlannedQty { get; set; }
        [Display(Name = "Planned($)")]
        public decimal PlannedAmt { get; set; }

        [Display(Name = "Factory")]
        public string Factory { get; set; }
        [Display(Name = "Remark")]
        public string Remark { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }

    public class Sewing
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "TeamManager")]
        public string Teamleader { get; set; }
        [Display(Name = "Buyer")]
        public string Buyer { get; set; }
        [DataType(DataType.Date)]
        [Display(Name = "Delivery")]
        public DateTime Delivery { get; set; }

        [Display(Name = "Order Q'ty")]
        public int OrderQty { get; set; }
        [Display(Name = "INT_1")]
        public decimal Sew1 { get; set; }
        [Display(Name = "JS")]
        public decimal Sew2 { get; set; }
        [Display(Name = "Apparel Links")]
        public decimal Sew3 { get; set; }
        [Display(Name = "Grand Apparel")]
        public decimal Sew4 { get; set; }
        [Display(Name = "Hanah Trading")]
        public decimal Sew5 { get; set; }
        [Display(Name = "Industrial Hana")]
        public decimal Sew6 { get; set; }
        [Display(Name = "Victoria Garment")]
        public decimal Sew7 { get; set; }
        [Display(Name = "Total")]
        public decimal Total { get; set; }

        [Display(Name = "Remark")]
        public string Remark { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }

    public class CustomerTrend
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "Buyer")]
        public string Buyer { get; set; }
        [Display(Name = "TeamManager")]
        public string Teamleader { get; set; }
        [Display(Name = "Notice")]
        public string Notice { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }

    public class TeamNotice
    {
        [Key]
        [Required(ErrorMessage = "ID should not be empty")]
        [Display(Name = "ID")]
        public int? ID { get; set; }
        [Display(Name = "Team")]
        public string Team { get; set; }
        [Display(Name = "Subject")]
        public string Subject { get; set; }
        [Display(Name = "Contact")]
        public string Contact { get; set; }
        [Display(Name = "Remark")]
        public string Remark { get; set; }

        [DataType(DataType.Date)]
        [Display(Name = "Created Date")]
        public DateTime Created { get; set; }
    }


    private async Task ExcelExport_Clicked(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_excelexport")
        {
            await this.DefaultGrid.ExcelExport();
        }
        else if (args.Item.Id == "Grid_pdfexport")
        {
            await this.DefaultGrid.PdfExport();
        }
    }
}
